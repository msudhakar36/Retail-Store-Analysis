---use basic_sql_case_study


--Q1 WHAT IS THE TOTAL NO OF ROWS IN EACH OF THE 3 TABLES IN THE DATABASE?

SELECT * FROM (
SELECT 'CUSTOMER' AS TABLE_NAME, COUNT(*) AS TOTAL_NO_OF_ROWS FROM CUSTOMER UNION ALL
SELECT 'PROD_CAT-INFO' AS TABLE_NAME, COUNT(*) AS TOTAL_NO_OF_ROWS FROM PROD_CAT_INFO UNION ALL
SELECT 'TRANSACTION' AS TABLE_NAME, COUNT(*) AS TOTAL_NO_OF_ROWS FROM TRANSACTIONS 
) TBL


--Q2 WHAT IS THE TOTAL NO OF TRANSACTION THAT HAVE RETURNED

SELECT 
COUNT(*) AS Total_NO_OF_TRANSACTION_RETURNED
FROM DBO.TRANSACTIONS
WHERE QTY <0 


--Q3 AS YOU WOUL HAVE NOTICED , THE DATES PROVIDED ACROSS THE DATA SET ARE NOT IN CORRECT FORMAT, AS FIRST STEP , PLS CONVERT THE
--DATE VARIABLE INTO VALID DATE FORMATS BEFORE PROCEDING 

SELECT 
FORMAT (CONVERT (DATE, TRAN_DATE , 103 ), 'dd-MM-yyyy') AS TRANSACTION_DATE,
FORMAT (CONVERT (DATE, DOB , 103 ), 'dd-MM-yyyy') AS DATE_OF_BIRTH
FROM DBO.CUSTOMER AS T1
LEFT JOIN DBO.TRANSACTIONS AS T2 ON T1.CUSTOMER_ID = T2.CUST_ID
LEFT JOIN DBO.PROD_CAT_INFO AS T3 ON T2.PROD_SUBCAT_CODE = T3.PROD_SUB_CAT_CODE


--Q4. WHAT IS THE TIME RANGE OF THE TRANSACTION DATA AVAILABLE FOR ANALYSIS? SHOW THE OUTPUT IN NUMBER OF DAYS, MONTH AND YEAR
--SIMULTANEOUSLY IN DIFFERENT COLUMNS


SELECT 
MIN ( (PARSE (TRAN_DATE AS DATE USING 'AR-LB')) ) AS START_TRAN_DATE,
MAX ((PARSE (TRAN_DATE AS DATE USING 'AR-LB')) ) AS END_TRAN_DATE,
DATEDIFF (DAY , MIN ((PARSE (TRAN_DATE AS DATE USING 'AR-LB') ) ) , MAX ((PARSE (TRAN_DATE AS DATE USING 'AR-LB')) )) AS NO_OF_DAYS,
DATEDIFF (MONTH , MIN ( (PARSE (TRAN_DATE AS DATE USING 'AR-LB')) ) , MAX ( (PARSE (TRAN_DATE AS DATE USING 'AR-LB')) )) AS NO_OF_MONTHS,
DATEDIFF (YEAR , MIN ((PARSE (TRAN_DATE AS DATE USING 'AR-LB')) ) , MAX ((PARSE (TRAN_DATE AS DATE USING 'AR-LB') ) )) AS NO_OF_YEARS
FROM DBO.TRANSACTIONS


--Q5. WHICH PRODUCT CATEGORY DOES THE SUB-CATEGORY "DIY" BELONG TO 


SELECT PROD_CAT
FROM DBO.PROD_CAT_INFO
WHERE PROD_SUBCAT = 'DIY'



/*******************************************DATA ANALYSIS*********************************************************/



--Q1.WHICH CHANNEL IS MOST FREQUENTLY USED FOR TRANSACTION ?

SELECT TOP 1 STORE_TYPE AS CHANNEL_FREQUENTLY_USED_FOR_TRANSACTION
FROM DBO.CUSTOMER
LEFT JOIN DBO.TRANSACTIONS ON DBO.CUSTOMER.CUSTOMER_ID = DBO.TRANSACTIONS.CUST_ID
LEFT JOIN DBO.PROD_CAT_INFO ON DBO.TRANSACTIONS.PROD_SUBCAT_CODE = DBO.PROD_CAT_INFO.PROD_SUB_CAT_CODE
GROUP BY STORE_TYPE
ORDER BY COUNT(STORE_TYPE) DESC


--Q2.  WHAT IS THE COUNT OF MALE AND FEMALE IN THE DATA BASE ?


SELECT GENDER ,
Count(GENDER) AS GENDER_Count 
FROM DBO.CUSTOMER
WHERE GENDER IN ('M' , 'F')
 GROUP BY GENDER 


-- Q3 FROM WHICH CITY DO WE HAVE MAXIMUM NO OF CUSTOMER AND HOW MANY?

SELECT TOP 1 CITY_CODE AS CITY,
COUNT(CUSTOMER_ID) AS N0_OF_CUSTOMER
FROM DBo.CUSTOMER
GROUP BY CITY_CODE
ORDER BY N0_OF_CUSTOMER DESC


--Q4 HOW MANY SUB CATEGORIES ARE THERE UNDER THE BOOKS CATEGFORY ?


SELECT 
COUNT(PROD_SUBCAT) AS NO_OF_SUBC_CATEGORY_UNDER_BOOKS_CATEGORY
FROM DBO.PROD_CAT_INFO
WHERE PROD_CAT = 'BOOKS'
GROUP BY PROD_CAT



-- Q5 WHAT IS THE MAXIMUN QUANTITY OF PRODUCTS EVER ORDER ?

SELECT 
MAX (QTY) AS MAXIMUM_QUANTITY_ORDERED_EVER
FROM DBO.TRANSACTIONS




--Q6 WHAT IS THE NET TOTAL REVENUE GENERATED GENERATED IN CATEGORIES ELECTRONICS AND BOOKS ?

SELECT 
FORMAT (SUM (TOTAL_AMT),'#,0.00') AS NET_TOTAL_REVENUE
FROM DBO.CUSTOMER
LEFT JOIN DBO.TRANSACTIONS ON DBO.CUSTOMER.CUSTOMER_ID = DBO.TRANSACTIONS.CUST_ID
LEFT JOIN DBO.PROD_CAT_INFO ON DBO.TRANSACTIONS.PROD_SUBCAT_CODE = DBO.PROD_CAT_INFO.PROD_SUB_CAT_CODE
WHERE PROD_CAT IN ('Electronics' , 'Books' )



--Q7 HOW MANY CUSTOMER HAVE > 10 TRANSACTION WITH US , EXCLUDING RETURNS ?


SELECT CUST_ID, COUNT(TRANSACTION_ID) AS NUMBER_OF_TRANSACTIONS
FROM TRANSACTIONS
WHERE QTY>0
GROUP BY CUST_ID
HAVING COUNT(TRANSACTION_ID)>10



--Q8. WHAT IS THE COMBINED REVENUE GENERATED FROM THE "ELECTRONICS" & " CLOTHING" CATEGORIES FROM FLAG SHIP 


SELECT 
FORMAT (SUM (TOTAL_AMT), '#,0.00')AS NET_TOTAL_REVENUE
FROM DBO.CUSTOMER
LEFT JOIN DBO.TRANSACTIONS ON DBO.CUSTOMER.CUSTOMER_ID = DBO.TRANSACTIONS.CUST_ID
LEFT JOIN DBO.PROD_CAT_INFO ON DBO.TRANSACTIONS.PROD_SUBCAT_CODE = DBO.PROD_CAT_INFO.PROD_SUB_CAT_CODE
WHERE PROD_CAT IN ('Electronics' , 'Clothing' ) AND STORE_TYPE = 'FLAGSHIP STORE'



--Q9 WHAT IS THE TOTAL REVENUE GENERATED FROM " MALE" CUSTOMER IN "ELECTRONICS" CATEGORY ? 
--OUTPUT SHOULD DISPLAY TOTAL REVENUE BY PRODUCT SUB CATEGORY 



SELECT PROD_SUBCAT,
FORMAT (SUM (TOTAL_AMT),' #,0.00') AS NET_TOTAL_REVENUE
FROM DBO.CUSTOMER
LEFT JOIN DBO.TRANSACTIONS ON DBO.CUSTOMER.CUSTOMER_ID = DBO.TRANSACTIONS.CUST_ID
LEFT JOIN DBO.PROD_CAT_INFO ON DBO.TRANSACTIONS.PROD_SUBCAT_CODE = DBO.PROD_CAT_INFO.PROD_SUB_CAT_CODE
WHERE PROD_CAT = 'Electronics' AND GENDER = 'M'
GROUP BY PROD_SUBCAT
ORDER BY NET_TOTAL_REVENUE



--Q10 WHAT IS THE PERCENT OF SALES AND RETURN BY PRODUCT SUB CATEGORY DISPLAY ONLY TOP 5  SUB CATEGORIES IN TERM OF SALES ?



SELECT TOP 5 T1.PROD_SUBCAT [SUB CATEGORY],
ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT > 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)[SALES],
ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT < 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)[RETURN],
(ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT > 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)- ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT < 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2))[TOTAL SALES],
(ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT < 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2) / (ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT > 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)- ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT < 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)))*100 [%RETURN],
(ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT > 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)/ (ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT > 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)- ROUND (SUM(CAST(CASE WHEN T2.TOTAL_AMT < 0 THEN T2.TOTAL_AMT ELSE 0 END AS FLOAT)),2)))*100 [%SALES]
FROM DBO.PROD_CAT_INFO AS T1
LEFT JOIN DBO.TRANSACTIONS  AS T2 ON T1.PROD_SUB_CAT_CODE = T2.PROD_SUBCAT_CODE
GROUP BY T1.PROD_SUBCAT
ORDER BY [%SALES] DESC



--Q11 FOR ALL CUSTOMER AGED BETWEEN 25 TO 30 YEAR FIND WHAT IS THE NET TOTAL REVENUE GENERATED BY THESE CUSTOMER IN LAST 30 DAYS OF TRANSACTION 
--DATE AVAILABLE IN DATA

SELECT  FORMAT (SUM (T2.TOTAL_AMT), '#,0.00') AS TOTAL_REVENUE
FROM TRANSACTIONS T2
LEFT JOIN  CUSTOMER T1 ON T2.CUST_ID=T1.CUSTOMER_ID
WHERE ((DATEDIFF(YYYY,CONVERT(date,T1.DOB,103),GETDATE())) BETWEEN 25 AND 35)
AND (DATEDIFF(DAY,CONVERT(date,T2.TRAN_DATE,103),(SELECT MAX(CONVERT(date,T3.TRAN_DATE,103)) FROM TRANSACTIONS T3))<=30)


---Q12  WHICH PRODUCT CATEGORY HAS SEEN THE MAX VALUE OF RETURN IN LAST 3 MONTHS OF TRANSACTION ?


SELECT TOP 1 PROD_CAT ,
SUM (TOTAL_AMT) AS TOTAL_VALUE_OF_RETURN
FROM DBO.TRANSACTIONS AS T1
LEFT JOIN DBO.PROD_CAT_INFO AS T2 ON T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE TOTAL_AMT < 0 
GROUP BY PROD_CAT , T1.TRAN_DATE
HAVING CONVERT (DATE, T1.TRAN_DATE , 103 ) >= DATEADD( DAY , -90 , MAX (CONVERT (DATE, T1.TRAN_DATE , 103 )))
ORDER BY TOTAL_VALUE_OF_RETURN ASC



---Q13 WHICH STORE TYPE SELLS THE MAXIMUM PRODUCTS ; BY VALUES OF SALES AMOUNT AND BY QUANTITY SOLD ?


SELECT TOP 1 STORE_TYPE,
FORMAT (SUM(TOTAL_AMT), '#,0.00')AS SALES_AMT , 
FORMAT (SUM (QTY), '#,0.00')AS TOTAL_QUANTITY_SOLD
 FROM DBO.TRANSACTIONS
 WHERE QTY>0 
 GROUP BY STORE_TYPE
 ORDER BY SUM(TOTAL_AMT) DESC , SUM (QTY) DESC



-- Q14 WHAT ARE THE CATEGORIES FOR WHICH AVERAGE REVENUE IS ABOVE OVERALL AVERAGE 



SELECT T2.PROD_CAT , AVG (T1.TOTAL_AMT) AS AVERAGE_REVENUE
FROM (SELECT T1.*,
AVG(T1.TOTAL_AMT) OVER () AS OVER_ALL_AVERAGE
FROM DBO.TRANSACTIONS AS T1) T1
LEFT JOIN DBO.PROD_CAT_INFO AS T2 ON T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
GROUP BY T2.PROD_CAT , OVER_ALL_AVERAGE
HAVING AVG (T1.TOTAL_AMT) > OVER_ALL_AVERAGE


--- Q15 FIND THE AVEGARGE AND TOTAL REVENUE BY EACH SUB CATEGORY FOR CATEGORIES WHICH ARE AMONG TOP 5 CATEGORIES IN TERM OF QUANTITY 



select P.PROD_CAT, P.prod_subcat as Product_SubCategory, 
AVG(cast(total_amt as float)) as Average_Revenue,
SUM(cast(total_amt as float)) as Total_Revenue
from Transactions as T
INNER JOIN prod_Cat_info as P
ON T.prod_cat_code = P.prod_cat_code AND T.prod_subcat_code = 
P.prod_sub_cat_code
WHERE P.prod_cat IN (
select top 5 P.prod_cat
from prod_cat_info as P
inner join Transactions as T
ON P.prod_cat_code = T.prod_cat_code AND P.prod_sub_cat_code = 
T.prod_subcat_code
group by P.PROD_CAT
order by sum(Cast(Qty as int)) desc
)
group by P.prod_subcat , P.PROD_CAT
